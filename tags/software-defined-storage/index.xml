<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>software defined storage on Calgary RHCE</title>
    <link>https://calgaryrhce.ca/tags/software-defined-storage/</link>
    <description>Recent content in software defined storage on Calgary RHCE</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 20 Oct 2018 17:43:07 +0000</lastBuildDate><atom:link href="https://calgaryrhce.ca/tags/software-defined-storage/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Troubleshooting performance of VDO and NFS</title>
      <link>https://calgaryrhce.ca/blog/2018/10/20/troubleshooting-performance-of-vdo-and-nfs/</link>
      <pubDate>Sat, 20 Oct 2018 17:43:07 +0000</pubDate>
      
      <guid>https://calgaryrhce.ca/blog/2018/10/20/troubleshooting-performance-of-vdo-and-nfs/</guid>
      <description>In setting up a local virtualization environment a little while back, I thought Iâ€™d try the recently GAâ€™d VDO capabilities in the RHEL 7.5 kernel. These include data compression and de-duplication natively in the linux kernel (through a kernel module). This was Red Hatâ€™s efforts behind the Permabit acquisition. Considering a virtualization data store is a prime candidate for a de-duplication use-case, I was anxious to reclaim some of my storage budget ðŸ™‚ .</description>
    </item>
    
    <item>
      <title>Migrating RHEV storage domains</title>
      <link>https://calgaryrhce.ca/blog/2018/10/19/migrating-rhev-storage-domains/</link>
      <pubDate>Fri, 19 Oct 2018 21:20:50 +0000</pubDate>
      
      <guid>https://calgaryrhce.ca/blog/2018/10/19/migrating-rhev-storage-domains/</guid>
      <description>Recently, Iâ€™ve been doing some troubleshooting in my virtualization environment, specifically with the NFS storage backing it. To isolate an issue I needed to migrate all the VM disks off the main data store to another one. I hadnâ€™t performed this kind of activity before, but found it to be quite easy.</description>
    </item>
    
    <item>
      <title>Reliable, resilient storage with GlusterFS</title>
      <link>https://calgaryrhce.ca/blog/2014/08/18/reliable-resilient-storage-with-glusterfs/</link>
      <pubDate>Tue, 19 Aug 2014 05:42:26 +0000</pubDate>
      
      <guid>https://calgaryrhce.ca/blog/2014/08/18/reliable-resilient-storage-with-glusterfs/</guid>
      <description>A need came up lately for some inexpensive resilient storage that was easily expandable, and that spanned multiple datacentres.Â Having recently been playing with GlusterFS and Swift in our OpenStack trial, I was quick to point out that these were strong use-cases for a GlusterFS architecture. We needed something right away, and something that also wasnâ€™t terribly expensive, which Gluster caters to quite well.</description>
    </item>
    
  </channel>
</rss>
